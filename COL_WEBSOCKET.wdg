#To edit and compare internal_properties, use WINDEV integrated tools.
#Internal properties refer to the properties of controls in windows, reports, etc.
info :
 name : COL_WEBSOCKET
 major_version : 28
 minor_version : 0
 type : 7
 description : ""
 subtype : 0
procedure_set :
 identifier : 0x1059d5f20003ae4f
 internal_properties : CAAAAAgAAABGLu41kG7fjQV3iS4F72qmnKaNh5694reolNKIW0iw
 code_elements :
  type_code : 31
  p_codes : []
  procedures :
   -
     name : SurNouvelleConnexion
     procedure_id : 1178208025778108435
     type_code : 15
     code : |1-
      procédure SurNouvelleConnexion( Client est un websocketClient )
      	
      	// Génère un identifiant pour le client
      	jsClient est un json
      	jsClient.id	= DonneUUID()
      	
      	// Mémorise l'identifiant
      	Client.Note	= jsClient
      	
      	// Les messages transmis peuvent être de tout type ( chaîne, etc...)
      	// Ici nous formatons un message JSON : un "event" pour indiquer le type d'événement et "data" pour transmettre des informations
      	jsNotification est un json
      	jsNotification.event	= "connection_established"
      	jsNotification.data		= Client.Note
      	
      	// Transmission
      	Client.Envoie( jsNotification )
     type : 458752
   -
     name : SurMessageReçu
     internal_properties : CAAAAAgAAADI9V5QUyjS3M9N373keX4ihFYC8hd1CxD6FTX9eeFI5xqVk53WelgTYMLmBcS9SAGnHCLEtab8R57i1JtsWwdBiEr3lzAchYamY0nNkV3tg4qzs729335pBmj4f8Nrdk6HxC/o1IJmm9w2rsnQf7jsvGoHEkvC8QfdRRxT85EyV3qq6Z99A/sLWG0YSFocxJgNqpaqLlbovilgR+duNSXjYT/0l8qLo1gfy07AW1e/ZLcxsaNaMKCWFClAHnicI1M8yaw1+okNySbNwJ/L
     procedure_id : 1178208837526985557
     type_code : 15
     code : |1-
      procédure SurMessageReçu( Client est un websocketClient, jsMessage est un json )
      
      	// Lecture des informations du client
      	jsClient est un json
      	jsClient = Client.Note
      	
      	// Le membre 'event' doit être renseigné
      	// Le client doit être enregistré
      	si jsMessage.event..Existe = faux _ou_ ( jsMessage.event pas dans ( "ping", "register" ) _ET_ jsClient.nom..Existe = Faux ) ALORS
      
      		jsNotification est un json
      		jsNotification.event	= "bad_request"
      		jsNotification.data		= jsMessage
      		
      		// Transmet une erreur de requête au client
      		Client.Envoie( jsNotification )
      		retour
      	FIN
      		
      	selon jsMessage.event
      		
      		// Fournit les informations
      		cas "register"
      			
      			jsClient.nom = jsMessage.data
      			Client.Note = jsClient
      			
      			jsNotification est un json
      			jsNotification.event = "member_added"
      			jsNotification.data	 = jsClient
      			
      			// On transmet aux autres clients cette information
      			WebsocketEnvoieTous( jsNotification )
      			
      		// Demande de la liste des clients
      		cas "member_list"
      			
      			tabClients est un tableau de websocketClients = WebSocketListeClientConnecté()
      			sClient est une chaine = Client.note
      			
      			jsListe est un json
      			jsListe.event = "member_list"
      			jsListe.data  = []
      			
      			pour tout UnClient de tabClients
      				
      				// Ignore le client courant
      				si UnClient..note = sClient alors continuer
      				
      				// Ignore un client qui ne s'est pas encore enregistré
      				jsUnClient est un json = UnClient..note
      				si jsUnClient.nom..Existe = faux alors continuer
      				
      				// Ajoute le client valide
      				ajoute( jsListe.data, UnClient..Note )
      			FIN
      			
      			// Renvoie la liste
      			Client.Envoie( jsListe )
      					
      		// Message de maintien de connexion
      		cas "ping"
      			
      			jsPong est un json
      			jsPong.event = "pong"			
      			Client.Envoie( jsPong )
      			
      		// Message indiquant que le client est en train de saisir
      		cas "typing"
      			
      			jsNotification est un json
      			jsNotification.event = "typing"
      			jsNotification.data  = jsClient
      			
      			// On transmet aux autres clients cette information
      			WebsocketEnvoieTous( jsNotification )
      			
      		// Message 
      		cas "text"
      				
      			jsNotification est un json
      			jsNotification.event		= "received"
      			jsNotification.data.from	= jsClient
      			jsNotification.data.text	= jsMessage.text
      			
      			// On transmet aux autres clients cette information
      			WebsocketEnvoieTous( jsNotification )
      			
      	fin
     type : 458752
   -
     name : SurDéconnexion
     procedure_id : 1178208992145844619
     type_code : 15
     code : |1-
      procédure SurDéconnexion( Client est un websocketClient )
      
      	jsClient est un json = Client..Note
      
      	jsNotification est un json
      	jsNotification.event	= "member_removed"
      	jsNotification.data		= jsClient
      	
      	// On transmet aux autres clients cette information
      	WebsocketEnvoieTous( jsNotification, <Sauf>: [ Client ] )
     type : 458752
   -
     name : WebsocketEnvoieTous
     procedure_id : 1178222285069705662
     type_code : 15
     code : |1-
      procédure WebsocketEnvoieTous( jsMessage est un json, Sauf est un tableau de websocketClients = [] )
      	
      	// Énumère chaque client 
      	Client est un websocketClient
      	POUR TOUT Client DE WebSocketListeClientConnecté()
      		
      		// Si on doit exclure des clients
      		si Sauf..Occurrence > 0 alors			
      			
      			// Cherche si le client fait partie de la liste
      			pour tout AutreClient de Sauf
      				si AutreClient.Note = Client.note ALORS
      					
      					// Ignore le client
      					continuer(2)					
      				FIN
      			FIN
      		fin
      		
      		// Ignore un client qui ne s'est pas encore enregistré
      		jsClient est un json = Client..note
      		SI jsClient.nom..Existe = Faux ALORS CONTINUER
      		
      		// Envoie la notification au client
      		Client.Envoie( jsMessage )		
      	FIN
     type : 458752
  procedure_templates : []
  property_templates : []
 code_parameters :
  internal_properties : CAAAAAgAAACVGQgYbalU7DKC3oH4ItDrjtcTHXXV/EuH8q0IbhyQlw==
  original_name : COL_SansNom1
resources :
 string_res :
  identifier : 0x1059d5ed0001998f
  internal_properties : CAAAAAgAAACm76HWfKGWp33VjXInA4cRlqArlgTTA862QGt72W2ld5Y=
custom_note :
 internal_properties : CAAAAAgAAABtB9HWVzrXO2+4NDRVK0vmzaNKrCKqH1DBX30lMmGZ
